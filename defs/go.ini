[language]
exts= go

[constant]
regex= const +{{IDENT}}
scope= ROOT

[variable]
regex= var +{{IDENT}}
scope= ROOT

[interface]
regex= ^ *type +{{IDENT}} *interface
scope= ROOT

; regular types
[type&0]
regex= ^ *type +{{IDENT}}
scope= ROOT

; func name(
[function]
regex= ^ *func *{{IDENT}}\(
scope= ROOT

;         func   (reciever?      *? parent             )  name        ()
[method]
regex= ^ *func *\((?: *IDENT)?? *\*?(?P<parents>IDENT) *\) +{{IDENT}} *\(
scope= ROOT

[property&0]
regex= ^ *\*?{{IDENT}}
scope= type

[property&1]
regex= ^ *{{IDENT}}\(
scope= interface
