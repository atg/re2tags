{
    "css": {
        "exts": [
            "css"
        ], 
        "symbols": [
            {
                "kind": "misc", 
                "regex": "^\\s*(?P<name>[^{}]+)\\s*{", 
                "scope": []
            }
        ]
    }, 
    "java": {
        "exts": [
            "java"
        ], 
        "symbols": [
            {
                "kind": "class", 
                "regex": "^\\s*class[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "interface", 
                "regex": "^\\s*interface[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "class_variable", 
                "regex": "^\\s*(?:[^\\n]*[ \\t]+)?static[ \\t]+[^\\n]+[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[[ \\t]+\\t]*[;=]", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "instance_variable", 
                "regex": "^\\s*[^\\n]+[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[[ \\t]+\\t]*[;=]", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "method", 
                "regex": "^\\s*[^\\n]+[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))[[ \\t]+\\t]*(", 
                "scope": [
                    "class", 
                    "interface"
                ]
            }
        ]
    }, 
    "php": {
        "exts": [
            "php", 
            "php5"
        ], 
        "symbols": [
            {
                "kind": "class", 
                "regex": "^\\s*class[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "constant", 
                "regex": "^\\s*(?:[^\\n]*[ \\t]+)?const[ \\t]+[^\\n]+[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[[ \\t]+\\t]*[;=]", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "class_variable", 
                "regex": "^\\s*(?:[^\\n]*[ \\t]+)?static[ \\t]+[^\\n]+[ \\t]+(?P<names>$(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[[ \\t]+\\t]*[;=]", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "instance_variable", 
                "regex": "^\\s*[^\\n]+[ \\t]+(?P<names>$(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[[ \\t]+\\t]*[;=]", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "method", 
                "regex": "^\\s*function[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))[[ \\t]+\\t]*(", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "function", 
                "regex": "^\\s*function[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))[[ \\t]+\\t]*(", 
                "scope": []
            }
        ]
    }, 
    "python": {
        "exts": [
            "py"
        ], 
        "symbols": [
            {
                "kind": "class", 
                "regex": "^\\s*class[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "class_property", 
                "regex": "^\\s*(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*))[ \\t]+=", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "method", 
                "regex": "^\\s*def[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "function", 
                "regex": "^\\s*def[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }
        ]
    }, 
    "ruby": {
        "exts": [
            "rb"
        ], 
        "symbols": [
            {
                "kind": "property", 
                "regex": "^\\s*attr_(?:writer|reader|accessor)[ \\t]+\\:(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "namespace", 
                "regex": "^\\s*module[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "class", 
                "regex": "^\\s*class[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }, 
            {
                "kind": "method", 
                "regex": "^\\s*def[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": [
                    "class"
                ]
            }, 
            {
                "kind": "function", 
                "regex": "^\\s*def[ \\t]+(?P<names>(?:[a-zA-Z_][a-zA-Z0-9_]*))", 
                "scope": []
            }
        ]
    }
}